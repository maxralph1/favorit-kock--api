## Autogenerated by Scribe. DO NOT MODIFY.

name: 'User endpoints'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/user/categories
    metadata:
      groupName: 'User endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Categories'
      description: 'Returns paginated list of categories.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'Page number.'
        required: false
        example: 1
        type: integer
        custom: []
    cleanQueryParameters:
      page: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","title":"First category","description":"This is the first category"}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/user/categories/{id}'
    metadata:
      groupName: 'User endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Category'
      description: 'Returns a Category record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 01h3hkgycyk98aqfs483p8evcy
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3hkgycyk98aqfs483p8evcy
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","title":"First category","description":"This is the first category"}, ...}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message":"Record not found."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/user/meals
    metadata:
      groupName: 'User endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Meals'
      description: 'Returns paginated list of meals.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'Page number.'
        required: false
        example: 1
        type: integer
        custom: []
    cleanQueryParameters:
      page: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","title":"First meal","description":"This is the first meal","price":"20.00","active":1,"category":{''id":"","title":"First meal","description":"This is the first meal"}}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/user/meals/{id}'
    metadata:
      groupName: 'User endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Meal'
      description: 'Returns a Meal record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the meal.'
        required: true
        example: 01h3hkgyhwvmvf4abd5hpj9p3x
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3hkgyhwvmvf4abd5hpj9p3x
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","title":"First meal","description":"This is the first meal","price":"20.00","active":1,"category":{''id":"","title":"First meal","description":"This is the first meal"}}, ...}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message":"Record not found."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/user/orders
    metadata:
      groupName: 'User endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Orders'
      description: 'Returns paginated list of orders.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'Page number.'
        required: false
        example: 1
        type: integer
        custom: []
    cleanQueryParameters:
      page: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","user_id":"01h3hkhxrh15atksjr11hrck0d","order_annuled":0,"delivered":0,"total_amount":50,"paid":0,"delivered_by":"01h3hkhxrh15atksjr11hrck0d"}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/user/orders
    metadata:
      groupName: 'User endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'POST Order'
      description: 'Creates a new Order record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: ''
        required: true
        example: quidem
        type: string
        custom: []
      order_annuled:
        name: order_annuled
        description: ''
        required: false
        example: false
        type: boolean
        custom: []
      delivered:
        name: delivered
        description: ''
        required: false
        example: true
        type: boolean
        custom: []
      total_amount:
        name: total_amount
        description: ''
        required: false
        example: 402.341
        type: number
        custom: []
      paid:
        name: paid
        description: ''
        required: false
        example: true
        type: boolean
        custom: []
    cleanBodyParameters:
      user_id: quidem
      order_annuled: false
      delivered: true
      total_amount: 402.341
      paid: true
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","user_id":"01h3hkhxrh15atksjr11hrck0d","order_annuled":0,"delivered":0,"total_amount":50,"paid":0,"delivered_by":"01h3hkhxrh15atksjr11hrck0d"}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/user/orders/{id}'
    metadata:
      groupName: 'User endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Order'
      description: 'Returns an Order record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the order.'
        required: true
        example: 01h3hkgysrj71pqm6dwfve5ay0
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3hkgysrj71pqm6dwfve5ay0
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","user_id":"01h3hkhxrh15atksjr11hrck0d","order_annuled":0,"delivered":0,"total_amount":50,"paid":0,"delivered_by":"01h3hkhxrh15atksjr11hrck0d"}, ...}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message":"Record not found."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/user/orders/{id}'
    metadata:
      groupName: 'User endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'PUT Order'
      description: 'Updates Order record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the order.'
        required: true
        example: 01h3hkgysrj71pqm6dwfve5ay0
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3hkgysrj71pqm6dwfve5ay0
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: ''
        required: false
        example: null
        type: string
        custom: []
      order_annuled:
        name: order_annuled
        description: ''
        required: false
        example: false
        type: boolean
        custom: []
      delivered:
        name: delivered
        description: ''
        required: false
        example: false
        type: boolean
        custom: []
      total_amount:
        name: total_amount
        description: ''
        required: false
        example: 60.72569318
        type: number
        custom: []
      paid:
        name: paid
        description: ''
        required: false
        example: false
        type: boolean
        custom: []
    cleanBodyParameters:
      order_annuled: false
      delivered: false
      total_amount: 60.72569318
      paid: false
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","user_id":"01h3hkhxrh15atksjr11hrck0d","order_annuled":0,"delivered":0,"total_amount":50,"paid":0,"delivered_by":"01h3hkhxrh15atksjr11hrck0d"}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/user/orders/{id}'
    metadata:
      groupName: 'User endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'DELETE Order'
      description: 'Deletes Order record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the order.'
        required: true
        example: 01h3hkgysrj71pqm6dwfve5ay0
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3hkgysrj71pqm6dwfve5ay0
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/user/order-items
    metadata:
      groupName: 'User endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Order Items'
      description: 'Returns paginated list of order items.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'Page number.'
        required: false
        example: 1
        type: integer
        custom: []
    cleanQueryParameters:
      page: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","meal_id":"01h3hkhxrh15atksjr11hrck0d","order_id":"01h3hkhxrh15atksjr11hrck0d","user_id":"01h3hkhxrh15atksjr11hrck0d","amount_due":55,"quantity_ordered":5}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/user/order-items
    metadata:
      groupName: 'User endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'POST Order Item'
      description: 'Creates a new Order Item record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      meal_id:
        name: meal_id
        description: ''
        required: true
        example: quaerat
        type: string
        custom: []
      order_id:
        name: order_id
        description: ''
        required: true
        example: ut
        type: string
        custom: []
      user_id:
        name: user_id
        description: ''
        required: true
        example: temporibus
        type: string
        custom: []
      amount_due:
        name: amount_due
        description: ''
        required: true
        example: 675.47
        type: number
        custom: []
      quantity_ordered:
        name: quantity_ordered
        description: ''
        required: true
        example: 15.0
        type: number
        custom: []
    cleanBodyParameters:
      meal_id: quaerat
      order_id: ut
      user_id: temporibus
      amount_due: 675.47
      quantity_ordered: 15.0
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","meal_id":"01h3hkhxrh15atksjr11hrck0d","order_id":"01h3hkhxrh15atksjr11hrck0d","user_id":"01h3hkhxrh15atksjr11hrck0d","amount_due":55,"quantity_ordered":5}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/user/order-items/{id}'
    metadata:
      groupName: 'User endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Order Item'
      description: 'Returns an Order Item record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the order item.'
        required: true
        example: 01h3hkgyygdrnkttkwkbh5sa1t
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3hkgyygdrnkttkwkbh5sa1t
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","meal_id":"01h3hkhxrh15atksjr11hrck0d","order_id":"01h3hkhxrh15atksjr11hrck0d","user_id":"01h3hkhxrh15atksjr11hrck0d","amount_due":55,"quantity_ordered":5}, ...}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message":"Record not found."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/user/order-items/{id}'
    metadata:
      groupName: 'User endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'PUT Order Item'
      description: 'Updates Order Item record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the order item.'
        required: true
        example: 01h3hkgyygdrnkttkwkbh5sa1t
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3hkgyygdrnkttkwkbh5sa1t
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      meal_id:
        name: meal_id
        description: ''
        required: false
        example: null
        type: string
        custom: []
      order_id:
        name: order_id
        description: ''
        required: false
        example: null
        type: string
        custom: []
      user_id:
        name: user_id
        description: ''
        required: false
        example: null
        type: string
        custom: []
      amount_due:
        name: amount_due
        description: ''
        required: false
        example: 1129983.3820182
        type: number
        custom: []
      quantity_ordered:
        name: quantity_ordered
        description: ''
        required: false
        example: 272942869.763
        type: number
        custom: []
    cleanBodyParameters:
      amount_due: 1129983.3820182
      quantity_ordered: 272942869.763
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","meal_id":"01h3hkhxrh15atksjr11hrck0d","order_id":"01h3hkhxrh15atksjr11hrck0d","user_id":"01h3hkhxrh15atksjr11hrck0d","amount_due":55,"quantity_ordered":5}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/user/order-items/{id}'
    metadata:
      groupName: 'User endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'DELETE Order Item'
      description: 'Deletes Order Item record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the order item.'
        required: true
        example: 01h3hkgyygdrnkttkwkbh5sa1t
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3hkgyygdrnkttkwkbh5sa1t
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/user/user-addresses
    metadata:
      groupName: 'User endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET User Addresses'
      description: 'Returns paginated list of user addresses.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'Page number.'
        required: false
        example: 1
        type: integer
        custom: []
    cleanQueryParameters:
      page: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","user_id":"01h3hkhxrh15atksjr11hrck0d","house_number":0,"street":"Thomson Street","city":"New York","post_code":12345,"state":"New York STate","landmark":"On the mango tree","default":1}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/user/user-addresses
    metadata:
      groupName: 'User endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'POST User Address'
      description: 'Creates a new User Address record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: ''
        required: true
        example: repellendus
        type: string
        custom: []
      house_number:
        name: house_number
        description: 'Must not be greater than 25 characters.'
        required: true
        example: arboyiolnrqdoezrmdsw
        type: string
        custom: []
      street:
        name: street
        description: 'Must not be greater than 75 characters.'
        required: true
        example: szdfjvgmkfx
        type: string
        custom: []
      city:
        name: city
        description: 'Must not be greater than 75 characters.'
        required: true
        example: wmondubiwiv
        type: string
        custom: []
      post_code:
        name: post_code
        description: 'Must not be greater than 25 characters.'
        required: true
        example: ekhxppeikjqyn
        type: string
        custom: []
      state:
        name: state
        description: 'Must not be greater than 75 characters.'
        required: true
        example: ei
        type: string
        custom: []
      landmark:
        name: landmark
        description: 'Must not be greater than 255 characters.'
        required: true
        example: gsj
        type: string
        custom: []
      default:
        name: default
        description: ''
        required: false
        example: false
        type: boolean
        custom: []
    cleanBodyParameters:
      user_id: repellendus
      house_number: arboyiolnrqdoezrmdsw
      street: szdfjvgmkfx
      city: wmondubiwiv
      post_code: ekhxppeikjqyn
      state: ei
      landmark: gsj
      default: false
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","user_id":"01h3hkhxrh15atksjr11hrck0d","house_number":0,"street":"Thomson Street","city":"New York","post_code":12345,"state":"New York STate","landmark":"On the mango tree","default":1}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/user/user-addresses/{id}'
    metadata:
      groupName: 'User endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET User Address'
      description: 'Returns an User Address record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user address.'
        required: true
        example: 01h3hkgy9ag250nwcyjtvd6mtr
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3hkgy9ag250nwcyjtvd6mtr
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","user_id":"01h3hkhxrh15atksjr11hrck0d","house_number":0,"street":"Thomson Street","city":"New York","post_code":12345,"state":"New York STate","landmark":"On the mango tree","default":1}, ...}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message":"Record not found."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/user/user-addresses/{id}'
    metadata:
      groupName: 'User endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'PUT User Address'
      description: 'Updates User Address record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user address.'
        required: true
        example: 01h3hkgy9ag250nwcyjtvd6mtr
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3hkgy9ag250nwcyjtvd6mtr
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: ''
        required: false
        example: null
        type: string
        custom: []
      house_number:
        name: house_number
        description: 'Must not be greater than 25 characters.'
        required: false
        example: vcqsj
        type: string
        custom: []
      street:
        name: street
        description: 'Must not be greater than 75 characters.'
        required: false
        example: mroqusj
        type: string
        custom: []
      city:
        name: city
        description: 'Must not be greater than 75 characters.'
        required: false
        example: vmjevpacefufgiqmmo
        type: string
        custom: []
      post_code:
        name: post_code
        description: 'Must not be greater than 25 characters.'
        required: false
        example: hsacerepp
        type: string
        custom: []
      state:
        name: state
        description: 'Must not be greater than 75 characters.'
        required: false
        example: cfblmsjjnjriwwfopooenn
        type: string
        custom: []
      landmark:
        name: landmark
        description: 'Must not be greater than 255 characters.'
        required: false
        example: dgkxhossfdrpujqhvavcwtvil
        type: string
        custom: []
      default:
        name: default
        description: ''
        required: false
        example: true
        type: boolean
        custom: []
    cleanBodyParameters:
      house_number: vcqsj
      street: mroqusj
      city: vmjevpacefufgiqmmo
      post_code: hsacerepp
      state: cfblmsjjnjriwwfopooenn
      landmark: dgkxhossfdrpujqhvavcwtvil
      default: true
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","meal_id":"01h3hkhxrh15atksjr11hrck0d","order_id":"01h3hkhxrh15atksjr11hrck0d","user_id":"01h3hkhxrh15atksjr11hrck0d","amount_due":55,"quantity_ordered":5}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/user/user-addresses/{id}'
    metadata:
      groupName: 'User endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'DELETE User Address'
      description: 'Deletes User Address record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user address.'
        required: true
        example: 01h3hkgy9ag250nwcyjtvd6mtr
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3hkgy9ag250nwcyjtvd6mtr
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/user/user-addresses/{user_address_id}/make-default'
    metadata:
      groupName: 'User endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'PATCH User Address'
      description: 'Makes User Address record default.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_address_id:
        name: user_address_id
        description: 'The ID of the user address.'
        required: true
        example: 01h3hkgy9ag250nwcyjtvd6mtr
        type: string
        custom: []
    cleanUrlParameters:
      user_address_id: 01h3hkgy9ag250nwcyjtvd6mtr
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","meal_id":"01h3hkhxrh15atksjr11hrck0d","order_id":"01h3hkhxrh15atksjr11hrck0d","user_id":"01h3hkhxrh15atksjr11hrck0d","amount_due":55,"quantity_ordered":5}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/user/user-images
    metadata:
      groupName: 'User endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'POST User Image'
      description: 'Creates a new User Image record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: ''
        required: true
        example: illum
        type: string
        custom: []
      image_url:
        name: image_url
        description: ''
        required: true
        example: porro
        type: string
        custom: []
      default:
        name: default
        description: ''
        required: false
        example: true
        type: boolean
        custom: []
    cleanBodyParameters:
      user_id: illum
      image_url: porro
      default: true
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","image_url":"https://via.placeholder.com/133x422.png/00dd55?tex...","user_id":"01h3hkhxrh15atksjr11hrck0d"}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/user/user-images/{id}'
    metadata:
      groupName: 'User endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET User Image'
      description: 'Returns a User Image record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user image.'
        required: true
        example: 01h3hkgybezjhm8hcxrgn7z48v
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3hkgybezjhm8hcxrgn7z48v
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","image_url":"https://via.placeholder.com/133x422.png/00dd55?tex...","user_id":"01h3hkhxrh15atksjr11hrck0d"}, ...}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message":"Record not found."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/user/user-images/{id}'
    metadata:
      groupName: 'User endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'PUT User Image'
      description: 'Updates User Image record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user image.'
        required: true
        example: 01h3hkgybezjhm8hcxrgn7z48v
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3hkgybezjhm8hcxrgn7z48v
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: ''
        required: false
        example: null
        type: string
        custom: []
      image_url:
        name: image_url
        description: ''
        required: false
        example: null
        type: string
        custom: []
      default:
        name: default
        description: ''
        required: false
        example: false
        type: boolean
        custom: []
    cleanBodyParameters:
      default: false
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","image_url":"https://via.placeholder.com/133x422.png/00dd55?tex...","user_id":"01h3hkhxrh15atksjr11hrck0d"}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/user/user-images/{id}'
    metadata:
      groupName: 'User endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'DELETE User Image'
      description: 'Deletes User Image record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user image.'
        required: true
        example: 01h3hkgybezjhm8hcxrgn7z48v
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3hkgybezjhm8hcxrgn7z48v
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
